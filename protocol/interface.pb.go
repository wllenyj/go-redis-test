// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interface.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MProtocolHeader struct {
	MsgID         string `protobuf:"bytes,1,opt,name=MsgID" json:"MsgID,omitempty"`
	Version       string `protobuf:"bytes,2,opt,name=Version" json:"Version,omitempty"`
	ContentLength int32  `protobuf:"varint,3,opt,name=ContentLength" json:"ContentLength,omitempty"`
	ContentType   string `protobuf:"bytes,4,opt,name=ContentType" json:"ContentType,omitempty"`
	TS            int64  `protobuf:"varint,5,opt,name=TS" json:"TS,omitempty"`
	Timeout       int64  `protobuf:"varint,6,opt,name=Timeout" json:"Timeout,omitempty"`
	ExtendHeader  string `protobuf:"bytes,7,opt,name=ExtendHeader" json:"ExtendHeader,omitempty"`
	MethodType    string `protobuf:"bytes,8,opt,name=MethodType" json:"MethodType,omitempty"`
	Host          string `protobuf:"bytes,9,opt,name=Host" json:"Host,omitempty"`
	Topic         string `protobuf:"bytes,10,opt,name=Topic" json:"Topic,omitempty"`
	From          string `protobuf:"bytes,11,opt,name=From" json:"From,omitempty"`
	To            string `protobuf:"bytes,12,opt,name=To" json:"To,omitempty"`
	Target        string `protobuf:"bytes,13,opt,name=Target" json:"Target,omitempty"`
	Payload       []byte `protobuf:"bytes,14,opt,name=Payload,proto3" json:"Payload,omitempty"`
}

func (m *MProtocolHeader) Reset()                    { *m = MProtocolHeader{} }
func (m *MProtocolHeader) String() string            { return proto.CompactTextString(m) }
func (*MProtocolHeader) ProtoMessage()               {}
func (*MProtocolHeader) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *MProtocolHeader) GetMsgID() string {
	if m != nil {
		return m.MsgID
	}
	return ""
}

func (m *MProtocolHeader) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MProtocolHeader) GetContentLength() int32 {
	if m != nil {
		return m.ContentLength
	}
	return 0
}

func (m *MProtocolHeader) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *MProtocolHeader) GetTS() int64 {
	if m != nil {
		return m.TS
	}
	return 0
}

func (m *MProtocolHeader) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *MProtocolHeader) GetExtendHeader() string {
	if m != nil {
		return m.ExtendHeader
	}
	return ""
}

func (m *MProtocolHeader) GetMethodType() string {
	if m != nil {
		return m.MethodType
	}
	return ""
}

func (m *MProtocolHeader) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *MProtocolHeader) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *MProtocolHeader) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MProtocolHeader) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *MProtocolHeader) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *MProtocolHeader) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type InnerProtocolHeader struct {
	MsgID   string `protobuf:"bytes,1,opt,name=MsgID" json:"MsgID,omitempty"`
	Topic   string `protobuf:"bytes,2,opt,name=Topic" json:"Topic,omitempty"`
	Region  string `protobuf:"bytes,3,opt,name=Region" json:"Region,omitempty"`
	Payload []byte `protobuf:"bytes,4,opt,name=Payload,proto3" json:"Payload,omitempty"`
}

func (m *InnerProtocolHeader) Reset()                    { *m = InnerProtocolHeader{} }
func (m *InnerProtocolHeader) String() string            { return proto.CompactTextString(m) }
func (*InnerProtocolHeader) ProtoMessage()               {}
func (*InnerProtocolHeader) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *InnerProtocolHeader) GetMsgID() string {
	if m != nil {
		return m.MsgID
	}
	return ""
}

func (m *InnerProtocolHeader) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *InnerProtocolHeader) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *InnerProtocolHeader) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*MProtocolHeader)(nil), "protocol.MProtocolHeader")
	proto.RegisterType((*InnerProtocolHeader)(nil), "protocol.InnerProtocolHeader")
}

func init() { proto.RegisterFile("interface.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x4d, 0x6b, 0xc2, 0x40,
	0x10, 0x86, 0x49, 0xd4, 0xa8, 0xe3, 0x17, 0x6c, 0x8b, 0xcc, 0xa9, 0x04, 0xe9, 0x21, 0xa7, 0x5e,
	0xfa, 0x13, 0xfa, 0x81, 0x42, 0x05, 0x89, 0x4b, 0xef, 0xa9, 0x99, 0xc6, 0x80, 0xee, 0xc8, 0x66,
	0x0b, 0xf5, 0x97, 0xf7, 0x5a, 0x32, 0xab, 0x25, 0xb9, 0xf5, 0x94, 0x7d, 0x9e, 0x0c, 0xfb, 0xce,
	0xec, 0xc0, 0xac, 0x34, 0x8e, 0xec, 0x67, 0xb6, 0xa3, 0x87, 0x93, 0x65, 0xc7, 0x6a, 0x20, 0x9f,
	0x1d, 0x1f, 0x16, 0x3f, 0x21, 0xcc, 0xd6, 0x9b, 0x0b, 0x2d, 0x29, 0xcb, 0xc9, 0xaa, 0x5b, 0xe8,
	0xad, 0xab, 0x62, 0xf5, 0x8c, 0x41, 0x1c, 0x24, 0xc3, 0xd4, 0x83, 0x42, 0xe8, 0xbf, 0x93, 0xad,
	0x4a, 0x36, 0x18, 0x8a, 0xbf, 0xa2, 0xba, 0x87, 0xc9, 0x13, 0x1b, 0x47, 0xc6, 0xbd, 0x91, 0x29,
	0xdc, 0x1e, 0x3b, 0x71, 0x90, 0xf4, 0xd2, 0xb6, 0x54, 0x31, 0x8c, 0x2e, 0x42, 0x9f, 0x4f, 0x84,
	0x5d, 0xb9, 0xa3, 0xa9, 0xd4, 0x14, 0x42, 0xbd, 0xc5, 0x5e, 0x1c, 0x24, 0x9d, 0x34, 0xd4, 0xdb,
	0x3a, 0x51, 0x97, 0x47, 0xe2, 0x2f, 0x87, 0x91, 0xc8, 0x2b, 0xaa, 0x05, 0x8c, 0x5f, 0xbe, 0x1d,
	0x99, 0xdc, 0x77, 0x8c, 0x7d, 0xb9, 0xac, 0xe5, 0xd4, 0x1d, 0xc0, 0x9a, 0xdc, 0x9e, 0x73, 0x89,
	0x1b, 0x48, 0x45, 0xc3, 0x28, 0x05, 0xdd, 0x25, 0x57, 0x0e, 0x87, 0xf2, 0x47, 0xce, 0xf5, 0xe4,
	0x9a, 0x4f, 0xe5, 0x0e, 0xc1, 0x4f, 0x2e, 0x50, 0x57, 0xbe, 0x5a, 0x3e, 0xe2, 0xc8, 0x57, 0xd6,
	0x67, 0xe9, 0x95, 0x71, 0x2c, 0x26, 0xd4, 0xac, 0xe6, 0x10, 0xe9, 0xcc, 0x16, 0xe4, 0x70, 0x22,
	0xee, 0x42, 0xf5, 0x0c, 0x9b, 0xec, 0x7c, 0xe0, 0x2c, 0xc7, 0x69, 0x1c, 0x24, 0xe3, 0xf4, 0x8a,
	0x8b, 0x0a, 0x6e, 0x56, 0xc6, 0x90, 0xfd, 0xd7, 0xe3, 0xff, 0x35, 0x16, 0x36, 0x1b, 0x9b, 0x43,
	0x94, 0x52, 0x51, 0x6f, 0xa4, 0xe3, 0x43, 0x3d, 0x35, 0x43, 0xbb, 0xad, 0xd0, 0x8f, 0x48, 0x16,
	0xff, 0xf8, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x7e, 0x18, 0x6a, 0x12, 0x02, 0x00, 0x00,
}
